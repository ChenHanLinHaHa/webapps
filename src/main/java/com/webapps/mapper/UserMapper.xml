<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.webapps.mapper.IUserMapper">
	<resultMap id="resultMap" type="com.webapps.common.entity.User">
		<id column="ID" jdbcType="DECIMAL" property="id" />
		<result column="NAME" jdbcType="VARCHAR" property="name" />
		<result column="account" jdbcType="VARCHAR" property="account" />
		<result column="password" jdbcType="VARCHAR" property="password" />
		<result column="token" jdbcType="VARCHAR" property="token" />
		<result column="id_Card_No" jdbcType="VARCHAR" property="idCardNo" />
		<result column="gender" jdbcType="VARCHAR" property="gender" />
		<result column="age" jdbcType="DECIMAL" property="age" />
		<result column="telephone" jdbcType="VARCHAR" property="telephone" />
		<result column="mobile" jdbcType="VARCHAR" property="mobile" />
		<result column="qq" jdbcType="VARCHAR" property="qq" />
		<result column="weiXin" jdbcType="VARCHAR" property="weiXin" />
		<result column="email" jdbcType="VARCHAR" property="email" />
		<result column="home_Address" jdbcType="VARCHAR" property="homeAddress" />
		<result column="address" jdbcType="VARCHAR" property="address" />
		<result column="user_type" jdbcType="DECIMAL" property="userType" />
		<result column="login_State" jdbcType="VARCHAR" property="loginState" />
		<result column="education_Id" jdbcType="VARCHAR" property="educationId" />
		<result column="data_state" jdbcType="DECIMAL" property="dataState" />
		<result column="create_time" jdbcType="VARCHAR" property="createTime" />
		<result column="UPDATE_TIME" jdbcType="VARCHAR" property="updateTime" />
	</resultMap>

	<sql id="select_columns">
		ID,account,password,token,name, gender, age, telephone, mobile,
		qq,weiXin,email,home_Address,address,id_card_no,
		user_type,login_State,education_Id,data_state,CREATE_TIME,UPDATE_TIME
	</sql>

	<sql id="insert_columns">
		account,
		password,
		token,
		name,
		gender,
		age,
		telephone,
		mobile,
		qq,
		weiXin,
		email,
		home_Address,
		address,
		id_card_no,
		user_type,
		login_State,
		education_Id,
		data_state,
		CREATE_TIME
	</sql>

	<select id="getById" resultMap="resultMap">
		select * from t_user where id = #{id}
	</select>

	<update id="updateById">
		UPDATE T_User
		<set>
			<if test="obj.name != null and obj.name != ''">
				name = #{obj.name,jdbcType=VARCHAR},
			</if>
			<if test="obj.telephone != null and obj.telephone != null and obj.telephone != ''">
				telephone = #{obj.telephone,jdbcType=VARCHAR},
			</if>
			<if test="obj.idCardNo != null and obj.idCardNo != ''">
				id_card_no = #{obj.idCardNo,jdbcType=VARCHAR},
			</if>
			<if test="obj.gender != null and obj.gender != ''">
				gender = #{obj.gender,jdbcType=DECIMAL},
			</if>
			<if test="obj.password != null and obj.password != '' ">
				password = #{obj.password,jdbcType=VARCHAR},
			</if>
			<if test="obj.age != null and obj.age != ''">
				age = #{obj.age,jdbcType=DECIMAL},
			</if>
			weiXin = #{obj.weiXin,jdbcType=VARCHAR},
			email = #{obj.email,jdbcType=VARCHAR},
			home_Address = #{obj.homeAddress,jdbcType=VARCHAR},
			address = #{obj.address,jdbcType=VARCHAR},
			login_State = #{obj.loginState,jdbcType=DECIMAL},
			education_Id = #{obj.educationId,jdbcType=DECIMAL},
			qq = #{obj.qq,jdbcType=VARCHAR},
			mobile = #{obj.mobile,jdbcType=VARCHAR},
			update_time = now()
		</set>
		WHERE ID = #{id,jdbcType=DECIMAL}
	</update>

	<select id="queryCount" resultType="java.lang.Integer">
		SELECT count(1) FROM t_user
		<trim prefix="WHERE" prefixOverrides="AND">
			data_state = 1 
			<if test="user.keyWords !=null and user.keyWords != ''">
				AND (
					name like "%||"#{user.keyWords,jdbcType=VARCHAR}||"%"
					or
					account like "%||"#{user.keyWords,jdbcType=VARCHAR}||"%"
					or
					id_card_no like "%||"#{user.keyWords,jdbcType=VARCHAR}||"%"
					)
				
			</if>
			<if test="user.age != null and user.age != ''">
				and age = #{user.age,jdbcType=DECIMAL}
			</if>
			<if test="user.gender != null and user.gender != ''">
				and gender = #{user.gender,jdbcType=DECIMAL}
			</if>
			<if test="user.educationId != null and user.educationId != ''">
				and education_Id = #{user.educationId,jdbcType=DECIMAL}
			</if>
			<if test="user.userType != null and user.userType != ''">
				and user_type = #{user.userType,jdbcType=DECIMAL}
			</if>
		</trim>
	</select>

	<!-- 根据productId获取product -->
	<select id="queryUserList" resultMap="resultMap">
		<include refid="ORACLE.paginationStart" />
		SELECT
		<include refid="select_columns" />
		FROM t_user
		<trim prefix="WHERE" prefixOverrides="AND">
			data_state = 1 
			<if test="user.name !=null and user.name != ''">
				AND name = #{user.name,jdbcType=VARCHAR}
			</if>
			<if test="user.age != null and user.age != ''">
				and age = #{user.age,jdbcType=DECIMAL}
			</if>
			<if test="user.gender != null and user.gender != ''">
				and gender = #{user.gender,jdbcType=VARCHAR}
			</if>
			<if test="user.educationId != null and user.educationId != ''">
				and education_Id = #{user.educationId,jdbcType=DECIMAL}
			</if>
			<if test="user.userType != null and user.userType != ''">
				and user_type = #{user.userType,jdbcType=VARCHAR}
			</if>
		</trim>
		order by name
		<include refid="ORACLE.paginationEnd" />
	</select>
	
	<select id="queryUserByAccount" resultMap="resultMap">
		select * from t_user where data_state = 1 and account = #{account}
	</select>

	<select id="deleteById" resultType="java.lang.Integer">
		DELETE T_user where id = #{id,jdbcType=DECIMAL}
	</select>
	
	<update id="deleteByIdInLogic">
		update t_user set data_state = 0 where id = #{id,jdbcType=DECIMAL}
	</update>


	<insert id="insert">
		insert into T_user (
			<include refid="insert_columns" />
		)
		values
		(
			#{obj.account},
			#{obj.password},
			#{obj.token},
			#{obj.name},
			#{obj.gender},
			#{obj.age},
			#{obj.telephone},
			#{obj.mobile},
			#{obj.qq},
			#{obj.weiXin},
			#{obj.email},
			#{obj.homeAddress},
			#{obj.address},
			#{obj.idCardNo},
			#{obj.userType},
			#{obj.loginState},
			#{obj.educationId},
			#{obj.dataState},
			#{obj.createTime}
		)
	</insert>
</mapper>